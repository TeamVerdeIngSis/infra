version: '3.8'

services:
  parse:
    container_name: "parse-service"
    image: ghcr.io/teamverdeingsis/parse:latest
    ports:
      - 8081:8080
    networks:
      - app-network


  permission:
    container_name: "permission-service"
    image: ghcr.io/teamverdeingsis/permissions:latest
    ports:
      - 8082:8080
    environment:
      DB_HOST: db_permission
      DB_PORT: 5432
      DB_NAME: permission-db
      DB_USER: sa
      DB_PASSWORD: password
    depends_on:
      - db_permission
    networks:
      - app-network

  snippets:
    container_name: "snippets-service"
    image: ghcr.io/teamverdeingsis/snippets:latest
    ports:
      - 8083:8080
    environment:
      DB_HOST: db_permission
      DB_PORT: 5432
      DB_NAME: permission-db
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: ${SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI}
    depends_on:
      - parse
      - permission
    networks:
      - app-network
    env_file:
      - .env

  db_permission:
    container_name: db_permission
    image: postgres:12
    ports:
      - 5433:5432
    environment:
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: password
      POSTGRES_DB: permission-db
    volumes:
      - pgdata_permission:/var/lib/postgresql/data
    networks:
      - app-network
  api:
    container_name: "asset_service"
    image: ghcr.io/austral-ingsis/snippet-asset-service:latest
    ports:
      - "8080:8080"
    environment:
      AZURE_HOST: "http://azurite"
      NEW_RELIC_APP_NAME: "asset-service"
      NEW_RELIC_AGENT_ENABLED: false


  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: "azurite"
    hostname: azurite
    restart: always
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - blob:/workspace

volumes:
    blob:
        external: false
    pgdata_permission: {}

networks:
  app-network:
    driver: bridge


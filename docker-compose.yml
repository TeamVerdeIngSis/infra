version: '3.8'

services:
  snippetsServiceInfra:
    image: ghcr.io/teamverdeingsis/snippets:latest
    platform: linux/amd64
    container_name: 'snippets-service-infra'
    ports:
      - "8083:8083"
    environment:
      POSTGRES_HOST: db_1
      POSTGRES_DB: snippets_db
      POSTGRES_USER: snippets_user
      POSTGRES_PASSWORD: snippets_password
      POSTGRES_PORT: 5432
      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
      NEW_RELIC_APP_NAME: 'snippetsInfra'
      NEW_RELIC_LOG_EXTENSION_ADD_MDC: true
      AUTH_SERVER_URI: ${SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI}
      AUTH_CLIENT_ID: ${AUTH0_CLIENT_ID}
      AUTH_CLIENT_SECRET: ${AUTH0_CLIENT_SECRET}
      spring.security.oauth2.resourceserver.jwt.issuer-uri: ${SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI}
      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
    depends_on:
      - db_1
    networks:
      - app-network

  permissionsServiceInfra:
    image: ghcr.io/teamverdeingsis/permissions:latest
    platform: linux/amd64
    container_name: 'permissions-service-infra'
    ports:
      - '8082:8082'
    environment:
      POSTGRES_HOST: db_2
      POSTGRES_DB: p_db
      POSTGRES_USER: p_user
      POSTGRES_PASSWORD: p_password
      POSTGRES_PORT: 5432
      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
      NEW_RELIC_APP_NAME: 'permissionsInfra'
      NEW_RELIC_LOG_EXTENSION_ADD_MDC: true
    depends_on:
      - db_2
    networks:
      - app-network

  parseServiceInfra:
    image: ghcr.io/teamverdeingsis/parse:latest
    container_name: 'parse-service-infra'
    ports:
      - "8081:8081"
    environment:
      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
      NEW_RELIC_APP_NAME: 'parseInfra'
      NEW_RELIC_AGENT_ENABLED: true
      NEW_RELIC_LOG_EXTENSION_ADD_MDC: true
    env_file:
      - .env
    networks:
      - app-network

  assetServiceInfra:
    image: ghcr.io/austral-ingsis/snippet-asset-service:latest
    container_name: 'asset-service-infra'
    ports:
      - "8080:8080"
    environment:
      AZURE_HOST: "http://azurite"
      NEW_RELIC_APP_NAME: "asset-service"
      NEW_RELIC_AGENT_ENABLED: false
    networks:
      - app-network

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: "azurite"
    hostname: azurite
    restart: always
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - blob:/workspace
    networks:
      - app-network

  proxy:
    image: nginx
    container_name: "reverse-proxy"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/vm.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - app-network

  db_1:
    image: postgres:12
    container_name: 'snippets-db-infra'
    platform: linux/amd64
    environment:
      POSTGRES_DB: snippets_db
      POSTGRES_USER: snippets_user
      POSTGRES_PASSWORD: snippets_password
    ports:
      - "5432:5432"
    volumes:
      - snippets_db_data:/var/lib/postgresql/data
    networks:
      - app-network

  db_2:
    image: postgres:12
    container_name: 'permissions-db-infra'
    platform: linux/amd64
    environment:
      POSTGRES_DB: p_db
      POSTGRES_USER: p_user
      POSTGRES_PASSWORD: p_password
    ports:
      - "5435:5432"
    volumes:
      - permissions_db_data:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  snippets_db_data:
    external: false
  permissions_db_data:
    external: false
  blob:
    external: false

networks:
  app-network:
    driver: bridge
